LONGEST CONSEC

int Solution::longestConsecutive(const vector<int> &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    unordered_set<int> hash;
    int longest = 0;

    for (int i = 0; i< A.size(); i++) {
        hash.insert(A[i]);
    }

    unordered_set<int>::iterator currNum = hash.begin();

    for (; currNum != hash.end(); currNum++) {
    
        int length = 1;
        int start = *currNum;
        int consecNum = start + 1;

        std::unordered_set<int>::const_iterator itr = hash.find (consecNum);

        if (hash.find(start-1) == hash.end()) {

            while ( itr != hash.end() ) {
                consecNum++;
                itr = hash.find(consecNum);
                length++;
            }

            if (length > longest) {
                longest = length;
            }
        }
    }

    return longest;

}
